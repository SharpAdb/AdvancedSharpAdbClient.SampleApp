namespace SharpADB.Metadata
{
    [contractversion(1)]
    apicontract SharpADBContract{};

    [contract(SharpADBContract, 1)]
    interface IRunProcess
    {
        Int32 RunProcess(String filename, String command, IVector<String> errorOutput, IVector<String> standardOutput, Int32 timeout);
        Windows.Foundation.IAsyncOperation<Int32> RunProcessAsync(String filename, String command, IVector<String> errorOutput, IVector<String> standardOutput);
    }

    [contract(SharpADBContract, 1)]
    delegate Boolean IsAliveHandler();

    [contract(SharpADBContract, 1)]
    interface ISetMonitor
    {
        void SetMonitor(IsAliveHandler handler, Windows.Foundation.TimeSpan period);
    }

    [contract(SharpADBContract, 1)]
    interface IServerManager requires ISetMonitor, Windows.Foundation.IClosable, Windows.Foundation.IStringable
    {
        Boolean IsServerRunning { get; };
        IRunProcess RunProcess { get; };
    }
}